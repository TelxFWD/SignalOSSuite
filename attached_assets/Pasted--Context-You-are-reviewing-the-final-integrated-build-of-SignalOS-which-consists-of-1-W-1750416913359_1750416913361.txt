🧠 Context:
You are reviewing the final integrated build of SignalOS, which consists of:

1. 🖥 Windows Desktop App – AI Parser + MT5 Sync Engine + GUI
2. 🌐 User Web Dashboard – Config Manager + Strategy Builder + Analytics
3. 🤖 Admin Panel – Parser Trainer + User/Signal Management + Telegram Alerts

All three modules are now developed. This prompt is to:
- Run a full QA pass across the system
- Detect and fix bugs
- Identify and complete any missing or partial features
- Validate full system connectivity and stability

---

🎯 Goals:
1. ✅ Ensure all three sections communicate as designed
2. ✅ Ensure the system recovers from failure (sync issues, parser crash, MT5 disconnect)
3. ✅ Validate Telegram notifications, user confirmations, and signal flow
4. ✅ Confirm UI/UX integrity, error handling, and state persistence across all flows
5. ✅ Ensure readiness for production deployment

---

🔎 Master Audit Checklist

### 1. 🖥 Windows App (SignalOS Core)
- [ ] Telegram session connects and receives signals
- [ ] Parser parses correctly (text + image) and logs output
- [ ] Signal.json is written to correct MT5 path
- [ ] EA heartbeat detected and logs synced to backend
- [ ] SL buffer (1–10 pips) logic is working on real signals
- [ ] Errors (e.g. MT5 offline) trigger retry and notify
- [ ] Config import/export functionality works
- [ ] Shadow mode accurately logs simulated trades

### 2. 🌐 Web-Based User Dashboard
- [ ] Telegram session upload works
- [ ] Channels auto-detected and assigned to providers
- [ ] MT5 terminals configured and mapped
- [ ] Strategies can be saved, previewed, and loaded
- [ ] Pro/Beginner strategy modes behave as expected
- [ ] Performance stats update in real-time
- [ ] Shadow test results log simulated performance
- [ ] QR/JSON strategy import/export works
- [ ] Health status (EA/parser/signal) is live and accurate

### 3. 🤖 Admin Panel
- [ ] All user/license CRUD operations work
- [ ] Parser training uploads work (.json labeled data)
- [ ] New model versions deploy to Windows apps
- [ ] Signal pipeline debugger traces signals end-to-end
- [ ] Telegram notifications are sent when:
    - Signal fails
    - Session expires
    - User confirmation is needed
- [ ] User responses from Telegram are reflected in backend
- [ ] Provider analytics and branded strategy templates sync correctly
- [ ] Global rule sets can be applied and removed

---

🧪 Cross-System Tests:
- [ ] Start signal in Telegram ➝ parsed ➝ MT5 executed ➝ feedback logged
- [ ] Trigger parser crash ➝ auto-reload or fallback works
- [ ] Remove EA ➝ retry system kicks in ➝ admin is notified
- [ ] User rejects a signal via Telegram ➝ reflected in dashboard logs
- [ ] Admin pushes a new parser model ➝ Windows app updates on sync
- [ ] Shadow vs live trade analytics compare correctly

---

📦 Output:
- ✅ List of bugs found and fixed
- ✅ List of missing but now completed features
- ✅ Logs showing signal flow from message to MT5 execution
- ✅ Screenshots of strategy builder, parser trainer, notification in Telegram
- ✅ Pass/fail report for each module

---

🛠 Suggestions:
- Use real signal channels for testing with `dry-run=true`
- Use dummy data for parser retrain (JSON with 3–5 signal examples)
- Enable debug mode in backend to log payloads for traceability

🧠 Final Deliverable:
A full production-ready SignalOS system with no critical bugs, verified signal flow, and UI/UX polished for end users, providers, and admins.
